% nix, bash, linux

$ nixfile: ls -1 *.nix
$ executable: compgen -c | sort | uniq

# Update Nix and home manager switch
home-manager switch --show-trace --flake ~/.dotfiles/home-manager --impure

# Update Nix, flake inputs and home manager switch
rm ~/.dotfiles/home-manager/flake.lock && home-manager switch --show-trace --flake ~/.dotfiles/home-manager --impure --refresh

# Update nix channels
nix-channel --update

# Show applications (.desktop)
ls -la ~/.nix-profile/share/applications/

# Show home-manager generations
home-manager generations

# Installed packages
nix-env --query --installed --out-path

# Remove generations
home-manager remove-generations <generation_id>
$ generation_id: home-manager generations --- --map "awk '{ print $5 }'"

# Run nix file
nix-instantiate --eval --strict --json <nixfile> | jq

# Run nix file with args
nix-instantiate --eval --strict --json --arg lib 1 <nixfile> | jq

# Start a nix-shell with a nix file (remove the space)
nix-shell -E '{ pkgs ? import <nixpkgs > {} }: pkgs.mkShell { nativeBuildInputs = [ (import ./<nixfile> { inherit pkgs; }) ]; }'

# Build a nix file
nix-build <nixfile>

# Build a nix file showing an attribute from the build
nix-build -A attribute <nixfile>

# Delete home-manager generations older than 2 weeks
home-manager expire-generations '-14 days'

# Delete home-manager all old generations
home-manager expire-generations '-0 seconds'

# Remove garbage (gc)
nix-store --gc

# see https://nixos.wiki/wiki/Cleaning_the_nix_store
# Show nix gc roots
sudo `which nix-store` --gc --print-roots | egrep -v "^(/nix/var|/run/\w+-system|\{memory|/proc)"

# Optimize nix store
nix-store --optimise

# List generations from nix-env
nix-env --list-generations

# Delete old generations from nix-env
nix-env --delete-generations old

# List nix-channels
nix-channel --list

# List nix-channel generations
nix-channel --list-generations

# Delete old channel generations
nix-env --profile ~/.local/state/nix/profiles/channels --delete-generations old

# Clean up all Nix storage
nix-env --profile ~/.local/state/nix/profiles/channels --delete-generations old && \
  nix-env --delete-generations old && \
  home-manager expire-generations '-0 seconds' && \
  nix-store --gc && \
  nix-store --optimise

# List build logs for a particular package
nix log <store_build_dir>
$ store_build_dir: fd '.*-<executable>-.*' /nix/store/ -td

# List executable nix store path
ll <store_dir>
$ store_dir: dirname $(readlink -f `which <executable>`)
